// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package billingmanager

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// IBillingManagerDepositAssetData is an auto generated low-level Go binding around an user-defined struct.
type IBillingManagerDepositAssetData struct {
	TokenAddr                 common.Address
	WorkflowExecutionDiscount *big.Int
	NetworkRewards            *big.Int
	IsPermitable              bool
	IsEnabled                 bool
}

// IBillingManagerDepositAssetInfo is an auto generated low-level Go binding around an user-defined struct.
type IBillingManagerDepositAssetInfo struct {
	DepositAssetKey  string
	DepositAssetData IBillingManagerDepositAssetData
}

// IBillingManagerNetworkWithdrawInfo is an auto generated low-level Go binding around an user-defined struct.
type IBillingManagerNetworkWithdrawInfo struct {
	DepositAssetKey  string
	UserAddr         common.Address
	AmountToWithdraw *big.Int
}

// IBillingManagerUserDepositInfo is an auto generated low-level Go binding around an user-defined struct.
type IBillingManagerUserDepositInfo struct {
	UserAddr            common.Address
	UserDepositedAmount *big.Int
}

// BillingManagerMetaData contains all meta data concerning the BillingManager contract.
var BillingManagerMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"depositAssetKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokensSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"name\":\"AssetDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"depositAssetKey\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"workflowExecutionDiscount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"networkRewards\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPermitable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"structIBillingManager.DepositAssetData\",\"name\":\"depositAssetData\",\"type\":\"tuple\"}],\"name\":\"DepositAssetAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"depositAssetKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newEnabledStatus\",\"type\":\"bool\"}],\"name\":\"DepositAssetEnabledStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"depositAssetKey\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToWithdraw\",\"type\":\"uint256\"}],\"name\":\"NetworkWithdrawCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"depositAssetKey\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardsAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"depositAssetKey\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawnAmount\",\"type\":\"uint256\"}],\"name\":\"UserFundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"depositAssetKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newWorkflowExecutionDiscount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevWorkflowExecutionDiscount\",\"type\":\"uint256\"}],\"name\":\"WorkflowExecutionDiscountUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"depositAssetKey\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"workflowExecutionDiscount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"networkRewards\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPermitable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"}],\"internalType\":\"structIBillingManager.DepositAssetData\",\"name\":\"depositAssetData\",\"type\":\"tuple\"}],\"internalType\":\"structIBillingManager.DepositAssetInfo[]\",\"name\":\"_depositAssetInfoArr\",\"type\":\"tuple[]\"}],\"name\":\"addDepositAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_depositAssetKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_recipientAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_depositAmount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_depositAssetKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_recipientAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sigExpirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"depositWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_depositAssetKeysArr\",\"type\":\"string[]\"}],\"name\":\"getDepositAssetsInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"depositAssetKey\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"workflowExecutionDiscount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"networkRewards\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPermitable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"}],\"internalType\":\"structIBillingManager.DepositAssetData\",\"name\":\"depositAssetData\",\"type\":\"tuple\"}],\"internalType\":\"structIBillingManager.DepositAssetInfo[]\",\"name\":\"_depositAssetsInfoArr\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"getExistingUsers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInjector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"injector_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_depositAssetKey\",\"type\":\"string\"}],\"name\":\"getNetworkRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedDepositAssetKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalUsersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddr\",\"type\":\"address\"}],\"name\":\"getUserDepositAssetKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_depositAssetKey\",\"type\":\"string\"}],\"name\":\"getUserDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userDepositedAmount\",\"type\":\"uint256\"}],\"internalType\":\"structIBillingManager.UserDepositInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddr\",\"type\":\"address\"}],\"name\":\"getUserWithdrawNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_depositAssetKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"getUsersDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userDepositedAmount\",\"type\":\"uint256\"}],\"internalType\":\"structIBillingManager.UserDepositInfo[]\",\"name\":\"_usersInfoArr\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"depositAssetKey\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"workflowExecutionDiscount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"networkRewards\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPermitable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"}],\"internalType\":\"structIBillingManager.DepositAssetData\",\"name\":\"depositAssetData\",\"type\":\"tuple\"}],\"internalType\":\"structIBillingManager.DepositAssetInfo\",\"name\":\"_nativeDepositAssetInfo\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_depositAssetKey\",\"type\":\"string\"}],\"name\":\"isDepositAssetEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_depositAssetKey\",\"type\":\"string\"}],\"name\":\"isDepositAssetPermitable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_depositAssetKey\",\"type\":\"string\"}],\"name\":\"isDepositAssetSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_depositAssetKey\",\"type\":\"string\"}],\"name\":\"isNativeDepositAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeDepositAssetKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"depositAssetKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToWithdraw\",\"type\":\"uint256\"}],\"internalType\":\"structIBillingManager.NetworkWithdrawInfo[]\",\"name\":\"_networkWithdrawArr\",\"type\":\"tuple[]\"}],\"name\":\"networkWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractsRegistryAddr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"setDependencies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"injector_\",\"type\":\"address\"}],\"name\":\"setInjector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_depositAssetKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_newEnabledStatus\",\"type\":\"bool\"}],\"name\":\"updateDepositAssetEnabledStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_depositAssetKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_newWorkflowExecutionDiscount\",\"type\":\"uint256\"}],\"name\":\"updateWorkflowExecutionDiscount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_depositAssetKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amountToWithdraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sigExpirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_depositAssetKey\",\"type\":\"string\"}],\"name\":\"withdrawNetworkRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
	Bin: "",
}

// BillingManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use BillingManagerMetaData.ABI instead.
var BillingManagerABI = BillingManagerMetaData.ABI

// BillingManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use BillingManagerMetaData.Bin instead.
var BillingManagerBin = BillingManagerMetaData.Bin

// DeployBillingManager deploys a new Ethereum contract, binding an instance of BillingManager to it.
func DeployBillingManager(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *BillingManager, error) {
	parsed, err := BillingManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(BillingManagerBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BillingManager{BillingManagerCaller: BillingManagerCaller{contract: contract}, BillingManagerTransactor: BillingManagerTransactor{contract: contract}, BillingManagerFilterer: BillingManagerFilterer{contract: contract}}, nil
}

// BillingManager is an auto generated Go binding around an Ethereum contract.
type BillingManager struct {
	BillingManagerCaller     // Read-only binding to the contract
	BillingManagerTransactor // Write-only binding to the contract
	BillingManagerFilterer   // Log filterer for contract events
}

// BillingManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type BillingManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BillingManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BillingManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BillingManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BillingManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BillingManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BillingManagerSession struct {
	Contract     *BillingManager   // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BillingManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BillingManagerCallerSession struct {
	Contract *BillingManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts         // Call options to use throughout this session
}

// BillingManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BillingManagerTransactorSession struct {
	Contract     *BillingManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts         // Transaction auth options to use throughout this session
}

// BillingManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type BillingManagerRaw struct {
	Contract *BillingManager // Generic contract binding to access the raw methods on
}

// BillingManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BillingManagerCallerRaw struct {
	Contract *BillingManagerCaller // Generic read-only contract binding to access the raw methods on
}

// BillingManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BillingManagerTransactorRaw struct {
	Contract *BillingManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBillingManager creates a new instance of BillingManager, bound to a specific deployed contract.
func NewBillingManager(address common.Address, backend bind.ContractBackend) (*BillingManager, error) {
	contract, err := bindBillingManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BillingManager{BillingManagerCaller: BillingManagerCaller{contract: contract}, BillingManagerTransactor: BillingManagerTransactor{contract: contract}, BillingManagerFilterer: BillingManagerFilterer{contract: contract}}, nil
}

// NewBillingManagerCaller creates a new read-only instance of BillingManager, bound to a specific deployed contract.
func NewBillingManagerCaller(address common.Address, caller bind.ContractCaller) (*BillingManagerCaller, error) {
	contract, err := bindBillingManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BillingManagerCaller{contract: contract}, nil
}

// NewBillingManagerTransactor creates a new write-only instance of BillingManager, bound to a specific deployed contract.
func NewBillingManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*BillingManagerTransactor, error) {
	contract, err := bindBillingManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BillingManagerTransactor{contract: contract}, nil
}

// NewBillingManagerFilterer creates a new log filterer instance of BillingManager, bound to a specific deployed contract.
func NewBillingManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*BillingManagerFilterer, error) {
	contract, err := bindBillingManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BillingManagerFilterer{contract: contract}, nil
}

// bindBillingManager binds a generic wrapper to an already deployed contract.
func bindBillingManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := BillingManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BillingManager *BillingManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _BillingManager.Contract.BillingManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BillingManager *BillingManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BillingManager.Contract.BillingManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BillingManager *BillingManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BillingManager.Contract.BillingManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BillingManager *BillingManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _BillingManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BillingManager *BillingManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BillingManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BillingManager *BillingManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BillingManager.Contract.contract.Transact(opts, method, params...)
}

// Eip712Domain is a free data retrieval call binding the contract method 0x84b0196e.
//
// Solidity: function eip712Domain() view returns(bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)
func (_BillingManager *BillingManagerCaller) Eip712Domain(opts *bind.CallOpts) (struct {
	Fields            [1]byte
	Name              string
	Version           string
	ChainId           *big.Int
	VerifyingContract common.Address
	Salt              [32]byte
	Extensions        []*big.Int
}, error) {
	var out []interface{}
	err := _BillingManager.contract.Call(opts, &out, "eip712Domain")

	outstruct := new(struct {
		Fields            [1]byte
		Name              string
		Version           string
		ChainId           *big.Int
		VerifyingContract common.Address
		Salt              [32]byte
		Extensions        []*big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Fields = *abi.ConvertType(out[0], new([1]byte)).(*[1]byte)
	outstruct.Name = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.Version = *abi.ConvertType(out[2], new(string)).(*string)
	outstruct.ChainId = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.VerifyingContract = *abi.ConvertType(out[4], new(common.Address)).(*common.Address)
	outstruct.Salt = *abi.ConvertType(out[5], new([32]byte)).(*[32]byte)
	outstruct.Extensions = *abi.ConvertType(out[6], new([]*big.Int)).(*[]*big.Int)

	return *outstruct, err

}

// Eip712Domain is a free data retrieval call binding the contract method 0x84b0196e.
//
// Solidity: function eip712Domain() view returns(bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)
func (_BillingManager *BillingManagerSession) Eip712Domain() (struct {
	Fields            [1]byte
	Name              string
	Version           string
	ChainId           *big.Int
	VerifyingContract common.Address
	Salt              [32]byte
	Extensions        []*big.Int
}, error) {
	return _BillingManager.Contract.Eip712Domain(&_BillingManager.CallOpts)
}

// Eip712Domain is a free data retrieval call binding the contract method 0x84b0196e.
//
// Solidity: function eip712Domain() view returns(bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)
func (_BillingManager *BillingManagerCallerSession) Eip712Domain() (struct {
	Fields            [1]byte
	Name              string
	Version           string
	ChainId           *big.Int
	VerifyingContract common.Address
	Salt              [32]byte
	Extensions        []*big.Int
}, error) {
	return _BillingManager.Contract.Eip712Domain(&_BillingManager.CallOpts)
}

// GetDepositAssetsInfo is a free data retrieval call binding the contract method 0x37913512.
//
// Solidity: function getDepositAssetsInfo(string[] _depositAssetKeysArr) view returns((string,(address,uint256,uint256,bool,bool))[] _depositAssetsInfoArr)
func (_BillingManager *BillingManagerCaller) GetDepositAssetsInfo(opts *bind.CallOpts, _depositAssetKeysArr []string) ([]IBillingManagerDepositAssetInfo, error) {
	var out []interface{}
	err := _BillingManager.contract.Call(opts, &out, "getDepositAssetsInfo", _depositAssetKeysArr)

	if err != nil {
		return *new([]IBillingManagerDepositAssetInfo), err
	}

	out0 := *abi.ConvertType(out[0], new([]IBillingManagerDepositAssetInfo)).(*[]IBillingManagerDepositAssetInfo)

	return out0, err

}

// GetDepositAssetsInfo is a free data retrieval call binding the contract method 0x37913512.
//
// Solidity: function getDepositAssetsInfo(string[] _depositAssetKeysArr) view returns((string,(address,uint256,uint256,bool,bool))[] _depositAssetsInfoArr)
func (_BillingManager *BillingManagerSession) GetDepositAssetsInfo(_depositAssetKeysArr []string) ([]IBillingManagerDepositAssetInfo, error) {
	return _BillingManager.Contract.GetDepositAssetsInfo(&_BillingManager.CallOpts, _depositAssetKeysArr)
}

// GetDepositAssetsInfo is a free data retrieval call binding the contract method 0x37913512.
//
// Solidity: function getDepositAssetsInfo(string[] _depositAssetKeysArr) view returns((string,(address,uint256,uint256,bool,bool))[] _depositAssetsInfoArr)
func (_BillingManager *BillingManagerCallerSession) GetDepositAssetsInfo(_depositAssetKeysArr []string) ([]IBillingManagerDepositAssetInfo, error) {
	return _BillingManager.Contract.GetDepositAssetsInfo(&_BillingManager.CallOpts, _depositAssetKeysArr)
}

// GetExistingUsers is a free data retrieval call binding the contract method 0x48cf8bab.
//
// Solidity: function getExistingUsers(uint256 _offset, uint256 _limit) view returns(address[])
func (_BillingManager *BillingManagerCaller) GetExistingUsers(opts *bind.CallOpts, _offset *big.Int, _limit *big.Int) ([]common.Address, error) {
	var out []interface{}
	err := _BillingManager.contract.Call(opts, &out, "getExistingUsers", _offset, _limit)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetExistingUsers is a free data retrieval call binding the contract method 0x48cf8bab.
//
// Solidity: function getExistingUsers(uint256 _offset, uint256 _limit) view returns(address[])
func (_BillingManager *BillingManagerSession) GetExistingUsers(_offset *big.Int, _limit *big.Int) ([]common.Address, error) {
	return _BillingManager.Contract.GetExistingUsers(&_BillingManager.CallOpts, _offset, _limit)
}

// GetExistingUsers is a free data retrieval call binding the contract method 0x48cf8bab.
//
// Solidity: function getExistingUsers(uint256 _offset, uint256 _limit) view returns(address[])
func (_BillingManager *BillingManagerCallerSession) GetExistingUsers(_offset *big.Int, _limit *big.Int) ([]common.Address, error) {
	return _BillingManager.Contract.GetExistingUsers(&_BillingManager.CallOpts, _offset, _limit)
}

// GetInjector is a free data retrieval call binding the contract method 0x3e3b5b19.
//
// Solidity: function getInjector() view returns(address injector_)
func (_BillingManager *BillingManagerCaller) GetInjector(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _BillingManager.contract.Call(opts, &out, "getInjector")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetInjector is a free data retrieval call binding the contract method 0x3e3b5b19.
//
// Solidity: function getInjector() view returns(address injector_)
func (_BillingManager *BillingManagerSession) GetInjector() (common.Address, error) {
	return _BillingManager.Contract.GetInjector(&_BillingManager.CallOpts)
}

// GetInjector is a free data retrieval call binding the contract method 0x3e3b5b19.
//
// Solidity: function getInjector() view returns(address injector_)
func (_BillingManager *BillingManagerCallerSession) GetInjector() (common.Address, error) {
	return _BillingManager.Contract.GetInjector(&_BillingManager.CallOpts)
}

// GetNetworkRewards is a free data retrieval call binding the contract method 0x5a53669c.
//
// Solidity: function getNetworkRewards(string _depositAssetKey) view returns(uint256)
func (_BillingManager *BillingManagerCaller) GetNetworkRewards(opts *bind.CallOpts, _depositAssetKey string) (*big.Int, error) {
	var out []interface{}
	err := _BillingManager.contract.Call(opts, &out, "getNetworkRewards", _depositAssetKey)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetNetworkRewards is a free data retrieval call binding the contract method 0x5a53669c.
//
// Solidity: function getNetworkRewards(string _depositAssetKey) view returns(uint256)
func (_BillingManager *BillingManagerSession) GetNetworkRewards(_depositAssetKey string) (*big.Int, error) {
	return _BillingManager.Contract.GetNetworkRewards(&_BillingManager.CallOpts, _depositAssetKey)
}

// GetNetworkRewards is a free data retrieval call binding the contract method 0x5a53669c.
//
// Solidity: function getNetworkRewards(string _depositAssetKey) view returns(uint256)
func (_BillingManager *BillingManagerCallerSession) GetNetworkRewards(_depositAssetKey string) (*big.Int, error) {
	return _BillingManager.Contract.GetNetworkRewards(&_BillingManager.CallOpts, _depositAssetKey)
}

// GetSupportedDepositAssetKeys is a free data retrieval call binding the contract method 0xa266f963.
//
// Solidity: function getSupportedDepositAssetKeys() view returns(string[])
func (_BillingManager *BillingManagerCaller) GetSupportedDepositAssetKeys(opts *bind.CallOpts) ([]string, error) {
	var out []interface{}
	err := _BillingManager.contract.Call(opts, &out, "getSupportedDepositAssetKeys")

	if err != nil {
		return *new([]string), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)

	return out0, err

}

// GetSupportedDepositAssetKeys is a free data retrieval call binding the contract method 0xa266f963.
//
// Solidity: function getSupportedDepositAssetKeys() view returns(string[])
func (_BillingManager *BillingManagerSession) GetSupportedDepositAssetKeys() ([]string, error) {
	return _BillingManager.Contract.GetSupportedDepositAssetKeys(&_BillingManager.CallOpts)
}

// GetSupportedDepositAssetKeys is a free data retrieval call binding the contract method 0xa266f963.
//
// Solidity: function getSupportedDepositAssetKeys() view returns(string[])
func (_BillingManager *BillingManagerCallerSession) GetSupportedDepositAssetKeys() ([]string, error) {
	return _BillingManager.Contract.GetSupportedDepositAssetKeys(&_BillingManager.CallOpts)
}

// GetTotalUsersCount is a free data retrieval call binding the contract method 0x0561010c.
//
// Solidity: function getTotalUsersCount() view returns(uint256)
func (_BillingManager *BillingManagerCaller) GetTotalUsersCount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _BillingManager.contract.Call(opts, &out, "getTotalUsersCount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTotalUsersCount is a free data retrieval call binding the contract method 0x0561010c.
//
// Solidity: function getTotalUsersCount() view returns(uint256)
func (_BillingManager *BillingManagerSession) GetTotalUsersCount() (*big.Int, error) {
	return _BillingManager.Contract.GetTotalUsersCount(&_BillingManager.CallOpts)
}

// GetTotalUsersCount is a free data retrieval call binding the contract method 0x0561010c.
//
// Solidity: function getTotalUsersCount() view returns(uint256)
func (_BillingManager *BillingManagerCallerSession) GetTotalUsersCount() (*big.Int, error) {
	return _BillingManager.Contract.GetTotalUsersCount(&_BillingManager.CallOpts)
}

// GetUserDepositAssetKeys is a free data retrieval call binding the contract method 0xa19ddf5b.
//
// Solidity: function getUserDepositAssetKeys(address _userAddr) view returns(string[])
func (_BillingManager *BillingManagerCaller) GetUserDepositAssetKeys(opts *bind.CallOpts, _userAddr common.Address) ([]string, error) {
	var out []interface{}
	err := _BillingManager.contract.Call(opts, &out, "getUserDepositAssetKeys", _userAddr)

	if err != nil {
		return *new([]string), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)

	return out0, err

}

// GetUserDepositAssetKeys is a free data retrieval call binding the contract method 0xa19ddf5b.
//
// Solidity: function getUserDepositAssetKeys(address _userAddr) view returns(string[])
func (_BillingManager *BillingManagerSession) GetUserDepositAssetKeys(_userAddr common.Address) ([]string, error) {
	return _BillingManager.Contract.GetUserDepositAssetKeys(&_BillingManager.CallOpts, _userAddr)
}

// GetUserDepositAssetKeys is a free data retrieval call binding the contract method 0xa19ddf5b.
//
// Solidity: function getUserDepositAssetKeys(address _userAddr) view returns(string[])
func (_BillingManager *BillingManagerCallerSession) GetUserDepositAssetKeys(_userAddr common.Address) ([]string, error) {
	return _BillingManager.Contract.GetUserDepositAssetKeys(&_BillingManager.CallOpts, _userAddr)
}

// GetUserDepositInfo is a free data retrieval call binding the contract method 0xf3883e26.
//
// Solidity: function getUserDepositInfo(address _userAddr, string _depositAssetKey) view returns((address,uint256))
func (_BillingManager *BillingManagerCaller) GetUserDepositInfo(opts *bind.CallOpts, _userAddr common.Address, _depositAssetKey string) (IBillingManagerUserDepositInfo, error) {
	var out []interface{}
	err := _BillingManager.contract.Call(opts, &out, "getUserDepositInfo", _userAddr, _depositAssetKey)

	if err != nil {
		return *new(IBillingManagerUserDepositInfo), err
	}

	out0 := *abi.ConvertType(out[0], new(IBillingManagerUserDepositInfo)).(*IBillingManagerUserDepositInfo)

	return out0, err

}

// GetUserDepositInfo is a free data retrieval call binding the contract method 0xf3883e26.
//
// Solidity: function getUserDepositInfo(address _userAddr, string _depositAssetKey) view returns((address,uint256))
func (_BillingManager *BillingManagerSession) GetUserDepositInfo(_userAddr common.Address, _depositAssetKey string) (IBillingManagerUserDepositInfo, error) {
	return _BillingManager.Contract.GetUserDepositInfo(&_BillingManager.CallOpts, _userAddr, _depositAssetKey)
}

// GetUserDepositInfo is a free data retrieval call binding the contract method 0xf3883e26.
//
// Solidity: function getUserDepositInfo(address _userAddr, string _depositAssetKey) view returns((address,uint256))
func (_BillingManager *BillingManagerCallerSession) GetUserDepositInfo(_userAddr common.Address, _depositAssetKey string) (IBillingManagerUserDepositInfo, error) {
	return _BillingManager.Contract.GetUserDepositInfo(&_BillingManager.CallOpts, _userAddr, _depositAssetKey)
}

// GetUserWithdrawNonce is a free data retrieval call binding the contract method 0xde2f5f2e.
//
// Solidity: function getUserWithdrawNonce(address _userAddr) view returns(uint256)
func (_BillingManager *BillingManagerCaller) GetUserWithdrawNonce(opts *bind.CallOpts, _userAddr common.Address) (*big.Int, error) {
	var out []interface{}
	err := _BillingManager.contract.Call(opts, &out, "getUserWithdrawNonce", _userAddr)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetUserWithdrawNonce is a free data retrieval call binding the contract method 0xde2f5f2e.
//
// Solidity: function getUserWithdrawNonce(address _userAddr) view returns(uint256)
func (_BillingManager *BillingManagerSession) GetUserWithdrawNonce(_userAddr common.Address) (*big.Int, error) {
	return _BillingManager.Contract.GetUserWithdrawNonce(&_BillingManager.CallOpts, _userAddr)
}

// GetUserWithdrawNonce is a free data retrieval call binding the contract method 0xde2f5f2e.
//
// Solidity: function getUserWithdrawNonce(address _userAddr) view returns(uint256)
func (_BillingManager *BillingManagerCallerSession) GetUserWithdrawNonce(_userAddr common.Address) (*big.Int, error) {
	return _BillingManager.Contract.GetUserWithdrawNonce(&_BillingManager.CallOpts, _userAddr)
}

// GetUsersDepositInfo is a free data retrieval call binding the contract method 0x7d7f8384.
//
// Solidity: function getUsersDepositInfo(string _depositAssetKey, uint256 _offset, uint256 _limit) view returns((address,uint256)[] _usersInfoArr)
func (_BillingManager *BillingManagerCaller) GetUsersDepositInfo(opts *bind.CallOpts, _depositAssetKey string, _offset *big.Int, _limit *big.Int) ([]IBillingManagerUserDepositInfo, error) {
	var out []interface{}
	err := _BillingManager.contract.Call(opts, &out, "getUsersDepositInfo", _depositAssetKey, _offset, _limit)

	if err != nil {
		return *new([]IBillingManagerUserDepositInfo), err
	}

	out0 := *abi.ConvertType(out[0], new([]IBillingManagerUserDepositInfo)).(*[]IBillingManagerUserDepositInfo)

	return out0, err

}

// GetUsersDepositInfo is a free data retrieval call binding the contract method 0x7d7f8384.
//
// Solidity: function getUsersDepositInfo(string _depositAssetKey, uint256 _offset, uint256 _limit) view returns((address,uint256)[] _usersInfoArr)
func (_BillingManager *BillingManagerSession) GetUsersDepositInfo(_depositAssetKey string, _offset *big.Int, _limit *big.Int) ([]IBillingManagerUserDepositInfo, error) {
	return _BillingManager.Contract.GetUsersDepositInfo(&_BillingManager.CallOpts, _depositAssetKey, _offset, _limit)
}

// GetUsersDepositInfo is a free data retrieval call binding the contract method 0x7d7f8384.
//
// Solidity: function getUsersDepositInfo(string _depositAssetKey, uint256 _offset, uint256 _limit) view returns((address,uint256)[] _usersInfoArr)
func (_BillingManager *BillingManagerCallerSession) GetUsersDepositInfo(_depositAssetKey string, _offset *big.Int, _limit *big.Int) ([]IBillingManagerUserDepositInfo, error) {
	return _BillingManager.Contract.GetUsersDepositInfo(&_BillingManager.CallOpts, _depositAssetKey, _offset, _limit)
}

// IsDepositAssetEnabled is a free data retrieval call binding the contract method 0x2b888682.
//
// Solidity: function isDepositAssetEnabled(string _depositAssetKey) view returns(bool)
func (_BillingManager *BillingManagerCaller) IsDepositAssetEnabled(opts *bind.CallOpts, _depositAssetKey string) (bool, error) {
	var out []interface{}
	err := _BillingManager.contract.Call(opts, &out, "isDepositAssetEnabled", _depositAssetKey)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsDepositAssetEnabled is a free data retrieval call binding the contract method 0x2b888682.
//
// Solidity: function isDepositAssetEnabled(string _depositAssetKey) view returns(bool)
func (_BillingManager *BillingManagerSession) IsDepositAssetEnabled(_depositAssetKey string) (bool, error) {
	return _BillingManager.Contract.IsDepositAssetEnabled(&_BillingManager.CallOpts, _depositAssetKey)
}

// IsDepositAssetEnabled is a free data retrieval call binding the contract method 0x2b888682.
//
// Solidity: function isDepositAssetEnabled(string _depositAssetKey) view returns(bool)
func (_BillingManager *BillingManagerCallerSession) IsDepositAssetEnabled(_depositAssetKey string) (bool, error) {
	return _BillingManager.Contract.IsDepositAssetEnabled(&_BillingManager.CallOpts, _depositAssetKey)
}

// IsDepositAssetPermitable is a free data retrieval call binding the contract method 0xc4710204.
//
// Solidity: function isDepositAssetPermitable(string _depositAssetKey) view returns(bool)
func (_BillingManager *BillingManagerCaller) IsDepositAssetPermitable(opts *bind.CallOpts, _depositAssetKey string) (bool, error) {
	var out []interface{}
	err := _BillingManager.contract.Call(opts, &out, "isDepositAssetPermitable", _depositAssetKey)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsDepositAssetPermitable is a free data retrieval call binding the contract method 0xc4710204.
//
// Solidity: function isDepositAssetPermitable(string _depositAssetKey) view returns(bool)
func (_BillingManager *BillingManagerSession) IsDepositAssetPermitable(_depositAssetKey string) (bool, error) {
	return _BillingManager.Contract.IsDepositAssetPermitable(&_BillingManager.CallOpts, _depositAssetKey)
}

// IsDepositAssetPermitable is a free data retrieval call binding the contract method 0xc4710204.
//
// Solidity: function isDepositAssetPermitable(string _depositAssetKey) view returns(bool)
func (_BillingManager *BillingManagerCallerSession) IsDepositAssetPermitable(_depositAssetKey string) (bool, error) {
	return _BillingManager.Contract.IsDepositAssetPermitable(&_BillingManager.CallOpts, _depositAssetKey)
}

// IsDepositAssetSupported is a free data retrieval call binding the contract method 0x606a679f.
//
// Solidity: function isDepositAssetSupported(string _depositAssetKey) view returns(bool)
func (_BillingManager *BillingManagerCaller) IsDepositAssetSupported(opts *bind.CallOpts, _depositAssetKey string) (bool, error) {
	var out []interface{}
	err := _BillingManager.contract.Call(opts, &out, "isDepositAssetSupported", _depositAssetKey)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsDepositAssetSupported is a free data retrieval call binding the contract method 0x606a679f.
//
// Solidity: function isDepositAssetSupported(string _depositAssetKey) view returns(bool)
func (_BillingManager *BillingManagerSession) IsDepositAssetSupported(_depositAssetKey string) (bool, error) {
	return _BillingManager.Contract.IsDepositAssetSupported(&_BillingManager.CallOpts, _depositAssetKey)
}

// IsDepositAssetSupported is a free data retrieval call binding the contract method 0x606a679f.
//
// Solidity: function isDepositAssetSupported(string _depositAssetKey) view returns(bool)
func (_BillingManager *BillingManagerCallerSession) IsDepositAssetSupported(_depositAssetKey string) (bool, error) {
	return _BillingManager.Contract.IsDepositAssetSupported(&_BillingManager.CallOpts, _depositAssetKey)
}

// IsNativeDepositAsset is a free data retrieval call binding the contract method 0xafb3f30a.
//
// Solidity: function isNativeDepositAsset(string _depositAssetKey) view returns(bool)
func (_BillingManager *BillingManagerCaller) IsNativeDepositAsset(opts *bind.CallOpts, _depositAssetKey string) (bool, error) {
	var out []interface{}
	err := _BillingManager.contract.Call(opts, &out, "isNativeDepositAsset", _depositAssetKey)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsNativeDepositAsset is a free data retrieval call binding the contract method 0xafb3f30a.
//
// Solidity: function isNativeDepositAsset(string _depositAssetKey) view returns(bool)
func (_BillingManager *BillingManagerSession) IsNativeDepositAsset(_depositAssetKey string) (bool, error) {
	return _BillingManager.Contract.IsNativeDepositAsset(&_BillingManager.CallOpts, _depositAssetKey)
}

// IsNativeDepositAsset is a free data retrieval call binding the contract method 0xafb3f30a.
//
// Solidity: function isNativeDepositAsset(string _depositAssetKey) view returns(bool)
func (_BillingManager *BillingManagerCallerSession) IsNativeDepositAsset(_depositAssetKey string) (bool, error) {
	return _BillingManager.Contract.IsNativeDepositAsset(&_BillingManager.CallOpts, _depositAssetKey)
}

// NativeDepositAssetKey is a free data retrieval call binding the contract method 0x33c25326.
//
// Solidity: function nativeDepositAssetKey() view returns(string)
func (_BillingManager *BillingManagerCaller) NativeDepositAssetKey(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _BillingManager.contract.Call(opts, &out, "nativeDepositAssetKey")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// NativeDepositAssetKey is a free data retrieval call binding the contract method 0x33c25326.
//
// Solidity: function nativeDepositAssetKey() view returns(string)
func (_BillingManager *BillingManagerSession) NativeDepositAssetKey() (string, error) {
	return _BillingManager.Contract.NativeDepositAssetKey(&_BillingManager.CallOpts)
}

// NativeDepositAssetKey is a free data retrieval call binding the contract method 0x33c25326.
//
// Solidity: function nativeDepositAssetKey() view returns(string)
func (_BillingManager *BillingManagerCallerSession) NativeDepositAssetKey() (string, error) {
	return _BillingManager.Contract.NativeDepositAssetKey(&_BillingManager.CallOpts)
}

// AddDepositAssets is a paid mutator transaction binding the contract method 0x7c1c6fba.
//
// Solidity: function addDepositAssets((string,(address,uint256,uint256,bool,bool))[] _depositAssetInfoArr) returns()
func (_BillingManager *BillingManagerTransactor) AddDepositAssets(opts *bind.TransactOpts, _depositAssetInfoArr []IBillingManagerDepositAssetInfo) (*types.Transaction, error) {
	return _BillingManager.contract.Transact(opts, "addDepositAssets", _depositAssetInfoArr)
}

// AddDepositAssets is a paid mutator transaction binding the contract method 0x7c1c6fba.
//
// Solidity: function addDepositAssets((string,(address,uint256,uint256,bool,bool))[] _depositAssetInfoArr) returns()
func (_BillingManager *BillingManagerSession) AddDepositAssets(_depositAssetInfoArr []IBillingManagerDepositAssetInfo) (*types.Transaction, error) {
	return _BillingManager.Contract.AddDepositAssets(&_BillingManager.TransactOpts, _depositAssetInfoArr)
}

// AddDepositAssets is a paid mutator transaction binding the contract method 0x7c1c6fba.
//
// Solidity: function addDepositAssets((string,(address,uint256,uint256,bool,bool))[] _depositAssetInfoArr) returns()
func (_BillingManager *BillingManagerTransactorSession) AddDepositAssets(_depositAssetInfoArr []IBillingManagerDepositAssetInfo) (*types.Transaction, error) {
	return _BillingManager.Contract.AddDepositAssets(&_BillingManager.TransactOpts, _depositAssetInfoArr)
}

// Deposit is a paid mutator transaction binding the contract method 0x2a48ac9a.
//
// Solidity: function deposit(string _depositAssetKey, address _recipientAddr, uint256 _depositAmount) payable returns()
func (_BillingManager *BillingManagerTransactor) Deposit(opts *bind.TransactOpts, _depositAssetKey string, _recipientAddr common.Address, _depositAmount *big.Int) (*types.Transaction, error) {
	return _BillingManager.contract.Transact(opts, "deposit", _depositAssetKey, _recipientAddr, _depositAmount)
}

// Deposit is a paid mutator transaction binding the contract method 0x2a48ac9a.
//
// Solidity: function deposit(string _depositAssetKey, address _recipientAddr, uint256 _depositAmount) payable returns()
func (_BillingManager *BillingManagerSession) Deposit(_depositAssetKey string, _recipientAddr common.Address, _depositAmount *big.Int) (*types.Transaction, error) {
	return _BillingManager.Contract.Deposit(&_BillingManager.TransactOpts, _depositAssetKey, _recipientAddr, _depositAmount)
}

// Deposit is a paid mutator transaction binding the contract method 0x2a48ac9a.
//
// Solidity: function deposit(string _depositAssetKey, address _recipientAddr, uint256 _depositAmount) payable returns()
func (_BillingManager *BillingManagerTransactorSession) Deposit(_depositAssetKey string, _recipientAddr common.Address, _depositAmount *big.Int) (*types.Transaction, error) {
	return _BillingManager.Contract.Deposit(&_BillingManager.TransactOpts, _depositAssetKey, _recipientAddr, _depositAmount)
}

// DepositWithPermit is a paid mutator transaction binding the contract method 0x3666cec5.
//
// Solidity: function depositWithPermit(string _depositAssetKey, address _recipientAddr, uint256 _depositAmount, uint256 _sigExpirationTime, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_BillingManager *BillingManagerTransactor) DepositWithPermit(opts *bind.TransactOpts, _depositAssetKey string, _recipientAddr common.Address, _depositAmount *big.Int, _sigExpirationTime *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _BillingManager.contract.Transact(opts, "depositWithPermit", _depositAssetKey, _recipientAddr, _depositAmount, _sigExpirationTime, _v, _r, _s)
}

// DepositWithPermit is a paid mutator transaction binding the contract method 0x3666cec5.
//
// Solidity: function depositWithPermit(string _depositAssetKey, address _recipientAddr, uint256 _depositAmount, uint256 _sigExpirationTime, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_BillingManager *BillingManagerSession) DepositWithPermit(_depositAssetKey string, _recipientAddr common.Address, _depositAmount *big.Int, _sigExpirationTime *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _BillingManager.Contract.DepositWithPermit(&_BillingManager.TransactOpts, _depositAssetKey, _recipientAddr, _depositAmount, _sigExpirationTime, _v, _r, _s)
}

// DepositWithPermit is a paid mutator transaction binding the contract method 0x3666cec5.
//
// Solidity: function depositWithPermit(string _depositAssetKey, address _recipientAddr, uint256 _depositAmount, uint256 _sigExpirationTime, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_BillingManager *BillingManagerTransactorSession) DepositWithPermit(_depositAssetKey string, _recipientAddr common.Address, _depositAmount *big.Int, _sigExpirationTime *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _BillingManager.Contract.DepositWithPermit(&_BillingManager.TransactOpts, _depositAssetKey, _recipientAddr, _depositAmount, _sigExpirationTime, _v, _r, _s)
}

// Initialize is a paid mutator transaction binding the contract method 0x7ac174f5.
//
// Solidity: function initialize((string,(address,uint256,uint256,bool,bool)) _nativeDepositAssetInfo) returns()
func (_BillingManager *BillingManagerTransactor) Initialize(opts *bind.TransactOpts, _nativeDepositAssetInfo IBillingManagerDepositAssetInfo) (*types.Transaction, error) {
	return _BillingManager.contract.Transact(opts, "initialize", _nativeDepositAssetInfo)
}

// Initialize is a paid mutator transaction binding the contract method 0x7ac174f5.
//
// Solidity: function initialize((string,(address,uint256,uint256,bool,bool)) _nativeDepositAssetInfo) returns()
func (_BillingManager *BillingManagerSession) Initialize(_nativeDepositAssetInfo IBillingManagerDepositAssetInfo) (*types.Transaction, error) {
	return _BillingManager.Contract.Initialize(&_BillingManager.TransactOpts, _nativeDepositAssetInfo)
}

// Initialize is a paid mutator transaction binding the contract method 0x7ac174f5.
//
// Solidity: function initialize((string,(address,uint256,uint256,bool,bool)) _nativeDepositAssetInfo) returns()
func (_BillingManager *BillingManagerTransactorSession) Initialize(_nativeDepositAssetInfo IBillingManagerDepositAssetInfo) (*types.Transaction, error) {
	return _BillingManager.Contract.Initialize(&_BillingManager.TransactOpts, _nativeDepositAssetInfo)
}

// NetworkWithdraw is a paid mutator transaction binding the contract method 0x7ad882eb.
//
// Solidity: function networkWithdraw((string,address,uint256)[] _networkWithdrawArr) returns()
func (_BillingManager *BillingManagerTransactor) NetworkWithdraw(opts *bind.TransactOpts, _networkWithdrawArr []IBillingManagerNetworkWithdrawInfo) (*types.Transaction, error) {
	return _BillingManager.contract.Transact(opts, "networkWithdraw", _networkWithdrawArr)
}

// NetworkWithdraw is a paid mutator transaction binding the contract method 0x7ad882eb.
//
// Solidity: function networkWithdraw((string,address,uint256)[] _networkWithdrawArr) returns()
func (_BillingManager *BillingManagerSession) NetworkWithdraw(_networkWithdrawArr []IBillingManagerNetworkWithdrawInfo) (*types.Transaction, error) {
	return _BillingManager.Contract.NetworkWithdraw(&_BillingManager.TransactOpts, _networkWithdrawArr)
}

// NetworkWithdraw is a paid mutator transaction binding the contract method 0x7ad882eb.
//
// Solidity: function networkWithdraw((string,address,uint256)[] _networkWithdrawArr) returns()
func (_BillingManager *BillingManagerTransactorSession) NetworkWithdraw(_networkWithdrawArr []IBillingManagerNetworkWithdrawInfo) (*types.Transaction, error) {
	return _BillingManager.Contract.NetworkWithdraw(&_BillingManager.TransactOpts, _networkWithdrawArr)
}

// SetDependencies is a paid mutator transaction binding the contract method 0x69130451.
//
// Solidity: function setDependencies(address _contractsRegistryAddr, bytes ) returns()
func (_BillingManager *BillingManagerTransactor) SetDependencies(opts *bind.TransactOpts, _contractsRegistryAddr common.Address, arg1 []byte) (*types.Transaction, error) {
	return _BillingManager.contract.Transact(opts, "setDependencies", _contractsRegistryAddr, arg1)
}

// SetDependencies is a paid mutator transaction binding the contract method 0x69130451.
//
// Solidity: function setDependencies(address _contractsRegistryAddr, bytes ) returns()
func (_BillingManager *BillingManagerSession) SetDependencies(_contractsRegistryAddr common.Address, arg1 []byte) (*types.Transaction, error) {
	return _BillingManager.Contract.SetDependencies(&_BillingManager.TransactOpts, _contractsRegistryAddr, arg1)
}

// SetDependencies is a paid mutator transaction binding the contract method 0x69130451.
//
// Solidity: function setDependencies(address _contractsRegistryAddr, bytes ) returns()
func (_BillingManager *BillingManagerTransactorSession) SetDependencies(_contractsRegistryAddr common.Address, arg1 []byte) (*types.Transaction, error) {
	return _BillingManager.Contract.SetDependencies(&_BillingManager.TransactOpts, _contractsRegistryAddr, arg1)
}

// SetInjector is a paid mutator transaction binding the contract method 0x8cb941cc.
//
// Solidity: function setInjector(address injector_) returns()
func (_BillingManager *BillingManagerTransactor) SetInjector(opts *bind.TransactOpts, injector_ common.Address) (*types.Transaction, error) {
	return _BillingManager.contract.Transact(opts, "setInjector", injector_)
}

// SetInjector is a paid mutator transaction binding the contract method 0x8cb941cc.
//
// Solidity: function setInjector(address injector_) returns()
func (_BillingManager *BillingManagerSession) SetInjector(injector_ common.Address) (*types.Transaction, error) {
	return _BillingManager.Contract.SetInjector(&_BillingManager.TransactOpts, injector_)
}

// SetInjector is a paid mutator transaction binding the contract method 0x8cb941cc.
//
// Solidity: function setInjector(address injector_) returns()
func (_BillingManager *BillingManagerTransactorSession) SetInjector(injector_ common.Address) (*types.Transaction, error) {
	return _BillingManager.Contract.SetInjector(&_BillingManager.TransactOpts, injector_)
}

// UpdateDepositAssetEnabledStatus is a paid mutator transaction binding the contract method 0xc172bfd7.
//
// Solidity: function updateDepositAssetEnabledStatus(string _depositAssetKey, bool _newEnabledStatus) returns()
func (_BillingManager *BillingManagerTransactor) UpdateDepositAssetEnabledStatus(opts *bind.TransactOpts, _depositAssetKey string, _newEnabledStatus bool) (*types.Transaction, error) {
	return _BillingManager.contract.Transact(opts, "updateDepositAssetEnabledStatus", _depositAssetKey, _newEnabledStatus)
}

// UpdateDepositAssetEnabledStatus is a paid mutator transaction binding the contract method 0xc172bfd7.
//
// Solidity: function updateDepositAssetEnabledStatus(string _depositAssetKey, bool _newEnabledStatus) returns()
func (_BillingManager *BillingManagerSession) UpdateDepositAssetEnabledStatus(_depositAssetKey string, _newEnabledStatus bool) (*types.Transaction, error) {
	return _BillingManager.Contract.UpdateDepositAssetEnabledStatus(&_BillingManager.TransactOpts, _depositAssetKey, _newEnabledStatus)
}

// UpdateDepositAssetEnabledStatus is a paid mutator transaction binding the contract method 0xc172bfd7.
//
// Solidity: function updateDepositAssetEnabledStatus(string _depositAssetKey, bool _newEnabledStatus) returns()
func (_BillingManager *BillingManagerTransactorSession) UpdateDepositAssetEnabledStatus(_depositAssetKey string, _newEnabledStatus bool) (*types.Transaction, error) {
	return _BillingManager.Contract.UpdateDepositAssetEnabledStatus(&_BillingManager.TransactOpts, _depositAssetKey, _newEnabledStatus)
}

// UpdateWorkflowExecutionDiscount is a paid mutator transaction binding the contract method 0xc66ae1e8.
//
// Solidity: function updateWorkflowExecutionDiscount(string _depositAssetKey, uint256 _newWorkflowExecutionDiscount) returns()
func (_BillingManager *BillingManagerTransactor) UpdateWorkflowExecutionDiscount(opts *bind.TransactOpts, _depositAssetKey string, _newWorkflowExecutionDiscount *big.Int) (*types.Transaction, error) {
	return _BillingManager.contract.Transact(opts, "updateWorkflowExecutionDiscount", _depositAssetKey, _newWorkflowExecutionDiscount)
}

// UpdateWorkflowExecutionDiscount is a paid mutator transaction binding the contract method 0xc66ae1e8.
//
// Solidity: function updateWorkflowExecutionDiscount(string _depositAssetKey, uint256 _newWorkflowExecutionDiscount) returns()
func (_BillingManager *BillingManagerSession) UpdateWorkflowExecutionDiscount(_depositAssetKey string, _newWorkflowExecutionDiscount *big.Int) (*types.Transaction, error) {
	return _BillingManager.Contract.UpdateWorkflowExecutionDiscount(&_BillingManager.TransactOpts, _depositAssetKey, _newWorkflowExecutionDiscount)
}

// UpdateWorkflowExecutionDiscount is a paid mutator transaction binding the contract method 0xc66ae1e8.
//
// Solidity: function updateWorkflowExecutionDiscount(string _depositAssetKey, uint256 _newWorkflowExecutionDiscount) returns()
func (_BillingManager *BillingManagerTransactorSession) UpdateWorkflowExecutionDiscount(_depositAssetKey string, _newWorkflowExecutionDiscount *big.Int) (*types.Transaction, error) {
	return _BillingManager.Contract.UpdateWorkflowExecutionDiscount(&_BillingManager.TransactOpts, _depositAssetKey, _newWorkflowExecutionDiscount)
}

// WithdrawFunds is a paid mutator transaction binding the contract method 0x27a64f66.
//
// Solidity: function withdrawFunds(string _depositAssetKey, uint256 _amountToWithdraw, uint256 _sigExpirationTime, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_BillingManager *BillingManagerTransactor) WithdrawFunds(opts *bind.TransactOpts, _depositAssetKey string, _amountToWithdraw *big.Int, _sigExpirationTime *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _BillingManager.contract.Transact(opts, "withdrawFunds", _depositAssetKey, _amountToWithdraw, _sigExpirationTime, _v, _r, _s)
}

// WithdrawFunds is a paid mutator transaction binding the contract method 0x27a64f66.
//
// Solidity: function withdrawFunds(string _depositAssetKey, uint256 _amountToWithdraw, uint256 _sigExpirationTime, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_BillingManager *BillingManagerSession) WithdrawFunds(_depositAssetKey string, _amountToWithdraw *big.Int, _sigExpirationTime *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _BillingManager.Contract.WithdrawFunds(&_BillingManager.TransactOpts, _depositAssetKey, _amountToWithdraw, _sigExpirationTime, _v, _r, _s)
}

// WithdrawFunds is a paid mutator transaction binding the contract method 0x27a64f66.
//
// Solidity: function withdrawFunds(string _depositAssetKey, uint256 _amountToWithdraw, uint256 _sigExpirationTime, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_BillingManager *BillingManagerTransactorSession) WithdrawFunds(_depositAssetKey string, _amountToWithdraw *big.Int, _sigExpirationTime *big.Int, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _BillingManager.Contract.WithdrawFunds(&_BillingManager.TransactOpts, _depositAssetKey, _amountToWithdraw, _sigExpirationTime, _v, _r, _s)
}

// WithdrawNetworkRewards is a paid mutator transaction binding the contract method 0x16fb02dd.
//
// Solidity: function withdrawNetworkRewards(string _depositAssetKey) returns()
func (_BillingManager *BillingManagerTransactor) WithdrawNetworkRewards(opts *bind.TransactOpts, _depositAssetKey string) (*types.Transaction, error) {
	return _BillingManager.contract.Transact(opts, "withdrawNetworkRewards", _depositAssetKey)
}

// WithdrawNetworkRewards is a paid mutator transaction binding the contract method 0x16fb02dd.
//
// Solidity: function withdrawNetworkRewards(string _depositAssetKey) returns()
func (_BillingManager *BillingManagerSession) WithdrawNetworkRewards(_depositAssetKey string) (*types.Transaction, error) {
	return _BillingManager.Contract.WithdrawNetworkRewards(&_BillingManager.TransactOpts, _depositAssetKey)
}

// WithdrawNetworkRewards is a paid mutator transaction binding the contract method 0x16fb02dd.
//
// Solidity: function withdrawNetworkRewards(string _depositAssetKey) returns()
func (_BillingManager *BillingManagerTransactorSession) WithdrawNetworkRewards(_depositAssetKey string) (*types.Transaction, error) {
	return _BillingManager.Contract.WithdrawNetworkRewards(&_BillingManager.TransactOpts, _depositAssetKey)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_BillingManager *BillingManagerTransactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BillingManager.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_BillingManager *BillingManagerSession) Receive() (*types.Transaction, error) {
	return _BillingManager.Contract.Receive(&_BillingManager.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_BillingManager *BillingManagerTransactorSession) Receive() (*types.Transaction, error) {
	return _BillingManager.Contract.Receive(&_BillingManager.TransactOpts)
}

// BillingManagerAssetDepositedIterator is returned from FilterAssetDeposited and is used to iterate over the raw logs and unpacked data for AssetDeposited events raised by the BillingManager contract.
type BillingManagerAssetDepositedIterator struct {
	Event *BillingManagerAssetDeposited // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BillingManagerAssetDepositedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BillingManagerAssetDeposited)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BillingManagerAssetDeposited)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BillingManagerAssetDepositedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BillingManagerAssetDepositedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BillingManagerAssetDeposited represents a AssetDeposited event raised by the BillingManager contract.
type BillingManagerAssetDeposited struct {
	DepositAssetKey  common.Hash
	TokensSender     common.Address
	DepositRecipient common.Address
	DepositAmount    *big.Int
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterAssetDeposited is a free log retrieval operation binding the contract event 0xfbc2fad7e5ffeb083133f666db8691af5364707e2b5bf9d1f6f93834433aeca4.
//
// Solidity: event AssetDeposited(string indexed depositAssetKey, address tokensSender, address depositRecipient, uint256 depositAmount)
func (_BillingManager *BillingManagerFilterer) FilterAssetDeposited(opts *bind.FilterOpts, depositAssetKey []string) (*BillingManagerAssetDepositedIterator, error) {

	var depositAssetKeyRule []interface{}
	for _, depositAssetKeyItem := range depositAssetKey {
		depositAssetKeyRule = append(depositAssetKeyRule, depositAssetKeyItem)
	}

	logs, sub, err := _BillingManager.contract.FilterLogs(opts, "AssetDeposited", depositAssetKeyRule)
	if err != nil {
		return nil, err
	}
	return &BillingManagerAssetDepositedIterator{contract: _BillingManager.contract, event: "AssetDeposited", logs: logs, sub: sub}, nil
}

// WatchAssetDeposited is a free log subscription operation binding the contract event 0xfbc2fad7e5ffeb083133f666db8691af5364707e2b5bf9d1f6f93834433aeca4.
//
// Solidity: event AssetDeposited(string indexed depositAssetKey, address tokensSender, address depositRecipient, uint256 depositAmount)
func (_BillingManager *BillingManagerFilterer) WatchAssetDeposited(opts *bind.WatchOpts, sink chan<- *BillingManagerAssetDeposited, depositAssetKey []string) (event.Subscription, error) {

	var depositAssetKeyRule []interface{}
	for _, depositAssetKeyItem := range depositAssetKey {
		depositAssetKeyRule = append(depositAssetKeyRule, depositAssetKeyItem)
	}

	logs, sub, err := _BillingManager.contract.WatchLogs(opts, "AssetDeposited", depositAssetKeyRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BillingManagerAssetDeposited)
				if err := _BillingManager.contract.UnpackLog(event, "AssetDeposited", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAssetDeposited is a log parse operation binding the contract event 0xfbc2fad7e5ffeb083133f666db8691af5364707e2b5bf9d1f6f93834433aeca4.
//
// Solidity: event AssetDeposited(string indexed depositAssetKey, address tokensSender, address depositRecipient, uint256 depositAmount)
func (_BillingManager *BillingManagerFilterer) ParseAssetDeposited(log types.Log) (*BillingManagerAssetDeposited, error) {
	event := new(BillingManagerAssetDeposited)
	if err := _BillingManager.contract.UnpackLog(event, "AssetDeposited", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BillingManagerDepositAssetAddedIterator is returned from FilterDepositAssetAdded and is used to iterate over the raw logs and unpacked data for DepositAssetAdded events raised by the BillingManager contract.
type BillingManagerDepositAssetAddedIterator struct {
	Event *BillingManagerDepositAssetAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BillingManagerDepositAssetAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BillingManagerDepositAssetAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BillingManagerDepositAssetAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BillingManagerDepositAssetAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BillingManagerDepositAssetAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BillingManagerDepositAssetAdded represents a DepositAssetAdded event raised by the BillingManager contract.
type BillingManagerDepositAssetAdded struct {
	DepositAssetKey  string
	DepositAssetData IBillingManagerDepositAssetData
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterDepositAssetAdded is a free log retrieval operation binding the contract event 0x310a01f49fbf43988aa0ce4a44296f5fc9f1fe442769d2416f1965d6a1cd236e.
//
// Solidity: event DepositAssetAdded(string depositAssetKey, (address,uint256,uint256,bool,bool) depositAssetData)
func (_BillingManager *BillingManagerFilterer) FilterDepositAssetAdded(opts *bind.FilterOpts) (*BillingManagerDepositAssetAddedIterator, error) {

	logs, sub, err := _BillingManager.contract.FilterLogs(opts, "DepositAssetAdded")
	if err != nil {
		return nil, err
	}
	return &BillingManagerDepositAssetAddedIterator{contract: _BillingManager.contract, event: "DepositAssetAdded", logs: logs, sub: sub}, nil
}

// WatchDepositAssetAdded is a free log subscription operation binding the contract event 0x310a01f49fbf43988aa0ce4a44296f5fc9f1fe442769d2416f1965d6a1cd236e.
//
// Solidity: event DepositAssetAdded(string depositAssetKey, (address,uint256,uint256,bool,bool) depositAssetData)
func (_BillingManager *BillingManagerFilterer) WatchDepositAssetAdded(opts *bind.WatchOpts, sink chan<- *BillingManagerDepositAssetAdded) (event.Subscription, error) {

	logs, sub, err := _BillingManager.contract.WatchLogs(opts, "DepositAssetAdded")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BillingManagerDepositAssetAdded)
				if err := _BillingManager.contract.UnpackLog(event, "DepositAssetAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDepositAssetAdded is a log parse operation binding the contract event 0x310a01f49fbf43988aa0ce4a44296f5fc9f1fe442769d2416f1965d6a1cd236e.
//
// Solidity: event DepositAssetAdded(string depositAssetKey, (address,uint256,uint256,bool,bool) depositAssetData)
func (_BillingManager *BillingManagerFilterer) ParseDepositAssetAdded(log types.Log) (*BillingManagerDepositAssetAdded, error) {
	event := new(BillingManagerDepositAssetAdded)
	if err := _BillingManager.contract.UnpackLog(event, "DepositAssetAdded", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BillingManagerDepositAssetEnabledStatusUpdatedIterator is returned from FilterDepositAssetEnabledStatusUpdated and is used to iterate over the raw logs and unpacked data for DepositAssetEnabledStatusUpdated events raised by the BillingManager contract.
type BillingManagerDepositAssetEnabledStatusUpdatedIterator struct {
	Event *BillingManagerDepositAssetEnabledStatusUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BillingManagerDepositAssetEnabledStatusUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BillingManagerDepositAssetEnabledStatusUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BillingManagerDepositAssetEnabledStatusUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BillingManagerDepositAssetEnabledStatusUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BillingManagerDepositAssetEnabledStatusUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BillingManagerDepositAssetEnabledStatusUpdated represents a DepositAssetEnabledStatusUpdated event raised by the BillingManager contract.
type BillingManagerDepositAssetEnabledStatusUpdated struct {
	DepositAssetKey  common.Hash
	NewEnabledStatus bool
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterDepositAssetEnabledStatusUpdated is a free log retrieval operation binding the contract event 0x838dfb07f2f9eda916131303b1c93fcdb2d1f0cfae1f651eee30c8bd44091356.
//
// Solidity: event DepositAssetEnabledStatusUpdated(string indexed depositAssetKey, bool newEnabledStatus)
func (_BillingManager *BillingManagerFilterer) FilterDepositAssetEnabledStatusUpdated(opts *bind.FilterOpts, depositAssetKey []string) (*BillingManagerDepositAssetEnabledStatusUpdatedIterator, error) {

	var depositAssetKeyRule []interface{}
	for _, depositAssetKeyItem := range depositAssetKey {
		depositAssetKeyRule = append(depositAssetKeyRule, depositAssetKeyItem)
	}

	logs, sub, err := _BillingManager.contract.FilterLogs(opts, "DepositAssetEnabledStatusUpdated", depositAssetKeyRule)
	if err != nil {
		return nil, err
	}
	return &BillingManagerDepositAssetEnabledStatusUpdatedIterator{contract: _BillingManager.contract, event: "DepositAssetEnabledStatusUpdated", logs: logs, sub: sub}, nil
}

// WatchDepositAssetEnabledStatusUpdated is a free log subscription operation binding the contract event 0x838dfb07f2f9eda916131303b1c93fcdb2d1f0cfae1f651eee30c8bd44091356.
//
// Solidity: event DepositAssetEnabledStatusUpdated(string indexed depositAssetKey, bool newEnabledStatus)
func (_BillingManager *BillingManagerFilterer) WatchDepositAssetEnabledStatusUpdated(opts *bind.WatchOpts, sink chan<- *BillingManagerDepositAssetEnabledStatusUpdated, depositAssetKey []string) (event.Subscription, error) {

	var depositAssetKeyRule []interface{}
	for _, depositAssetKeyItem := range depositAssetKey {
		depositAssetKeyRule = append(depositAssetKeyRule, depositAssetKeyItem)
	}

	logs, sub, err := _BillingManager.contract.WatchLogs(opts, "DepositAssetEnabledStatusUpdated", depositAssetKeyRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BillingManagerDepositAssetEnabledStatusUpdated)
				if err := _BillingManager.contract.UnpackLog(event, "DepositAssetEnabledStatusUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDepositAssetEnabledStatusUpdated is a log parse operation binding the contract event 0x838dfb07f2f9eda916131303b1c93fcdb2d1f0cfae1f651eee30c8bd44091356.
//
// Solidity: event DepositAssetEnabledStatusUpdated(string indexed depositAssetKey, bool newEnabledStatus)
func (_BillingManager *BillingManagerFilterer) ParseDepositAssetEnabledStatusUpdated(log types.Log) (*BillingManagerDepositAssetEnabledStatusUpdated, error) {
	event := new(BillingManagerDepositAssetEnabledStatusUpdated)
	if err := _BillingManager.contract.UnpackLog(event, "DepositAssetEnabledStatusUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BillingManagerEIP712DomainChangedIterator is returned from FilterEIP712DomainChanged and is used to iterate over the raw logs and unpacked data for EIP712DomainChanged events raised by the BillingManager contract.
type BillingManagerEIP712DomainChangedIterator struct {
	Event *BillingManagerEIP712DomainChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BillingManagerEIP712DomainChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BillingManagerEIP712DomainChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BillingManagerEIP712DomainChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BillingManagerEIP712DomainChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BillingManagerEIP712DomainChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BillingManagerEIP712DomainChanged represents a EIP712DomainChanged event raised by the BillingManager contract.
type BillingManagerEIP712DomainChanged struct {
	Raw types.Log // Blockchain specific contextual infos
}

// FilterEIP712DomainChanged is a free log retrieval operation binding the contract event 0x0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31.
//
// Solidity: event EIP712DomainChanged()
func (_BillingManager *BillingManagerFilterer) FilterEIP712DomainChanged(opts *bind.FilterOpts) (*BillingManagerEIP712DomainChangedIterator, error) {

	logs, sub, err := _BillingManager.contract.FilterLogs(opts, "EIP712DomainChanged")
	if err != nil {
		return nil, err
	}
	return &BillingManagerEIP712DomainChangedIterator{contract: _BillingManager.contract, event: "EIP712DomainChanged", logs: logs, sub: sub}, nil
}

// WatchEIP712DomainChanged is a free log subscription operation binding the contract event 0x0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31.
//
// Solidity: event EIP712DomainChanged()
func (_BillingManager *BillingManagerFilterer) WatchEIP712DomainChanged(opts *bind.WatchOpts, sink chan<- *BillingManagerEIP712DomainChanged) (event.Subscription, error) {

	logs, sub, err := _BillingManager.contract.WatchLogs(opts, "EIP712DomainChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BillingManagerEIP712DomainChanged)
				if err := _BillingManager.contract.UnpackLog(event, "EIP712DomainChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseEIP712DomainChanged is a log parse operation binding the contract event 0x0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31.
//
// Solidity: event EIP712DomainChanged()
func (_BillingManager *BillingManagerFilterer) ParseEIP712DomainChanged(log types.Log) (*BillingManagerEIP712DomainChanged, error) {
	event := new(BillingManagerEIP712DomainChanged)
	if err := _BillingManager.contract.UnpackLog(event, "EIP712DomainChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BillingManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the BillingManager contract.
type BillingManagerInitializedIterator struct {
	Event *BillingManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BillingManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BillingManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BillingManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BillingManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BillingManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BillingManagerInitialized represents a Initialized event raised by the BillingManager contract.
type BillingManagerInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_BillingManager *BillingManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*BillingManagerInitializedIterator, error) {

	logs, sub, err := _BillingManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &BillingManagerInitializedIterator{contract: _BillingManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_BillingManager *BillingManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *BillingManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _BillingManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BillingManagerInitialized)
				if err := _BillingManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_BillingManager *BillingManagerFilterer) ParseInitialized(log types.Log) (*BillingManagerInitialized, error) {
	event := new(BillingManagerInitialized)
	if err := _BillingManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BillingManagerNetworkWithdrawCompletedIterator is returned from FilterNetworkWithdrawCompleted and is used to iterate over the raw logs and unpacked data for NetworkWithdrawCompleted events raised by the BillingManager contract.
type BillingManagerNetworkWithdrawCompletedIterator struct {
	Event *BillingManagerNetworkWithdrawCompleted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BillingManagerNetworkWithdrawCompletedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BillingManagerNetworkWithdrawCompleted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BillingManagerNetworkWithdrawCompleted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BillingManagerNetworkWithdrawCompletedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BillingManagerNetworkWithdrawCompletedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BillingManagerNetworkWithdrawCompleted represents a NetworkWithdrawCompleted event raised by the BillingManager contract.
type BillingManagerNetworkWithdrawCompleted struct {
	DepositAssetKey  common.Hash
	UserAddr         common.Address
	AmountToWithdraw *big.Int
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterNetworkWithdrawCompleted is a free log retrieval operation binding the contract event 0xf72e4018008bb0ada87515fbd23be8639327f3e5c56c767bade1791a8cf98aaa.
//
// Solidity: event NetworkWithdrawCompleted(string indexed depositAssetKey, address indexed userAddr, uint256 amountToWithdraw)
func (_BillingManager *BillingManagerFilterer) FilterNetworkWithdrawCompleted(opts *bind.FilterOpts, depositAssetKey []string, userAddr []common.Address) (*BillingManagerNetworkWithdrawCompletedIterator, error) {

	var depositAssetKeyRule []interface{}
	for _, depositAssetKeyItem := range depositAssetKey {
		depositAssetKeyRule = append(depositAssetKeyRule, depositAssetKeyItem)
	}
	var userAddrRule []interface{}
	for _, userAddrItem := range userAddr {
		userAddrRule = append(userAddrRule, userAddrItem)
	}

	logs, sub, err := _BillingManager.contract.FilterLogs(opts, "NetworkWithdrawCompleted", depositAssetKeyRule, userAddrRule)
	if err != nil {
		return nil, err
	}
	return &BillingManagerNetworkWithdrawCompletedIterator{contract: _BillingManager.contract, event: "NetworkWithdrawCompleted", logs: logs, sub: sub}, nil
}

// WatchNetworkWithdrawCompleted is a free log subscription operation binding the contract event 0xf72e4018008bb0ada87515fbd23be8639327f3e5c56c767bade1791a8cf98aaa.
//
// Solidity: event NetworkWithdrawCompleted(string indexed depositAssetKey, address indexed userAddr, uint256 amountToWithdraw)
func (_BillingManager *BillingManagerFilterer) WatchNetworkWithdrawCompleted(opts *bind.WatchOpts, sink chan<- *BillingManagerNetworkWithdrawCompleted, depositAssetKey []string, userAddr []common.Address) (event.Subscription, error) {

	var depositAssetKeyRule []interface{}
	for _, depositAssetKeyItem := range depositAssetKey {
		depositAssetKeyRule = append(depositAssetKeyRule, depositAssetKeyItem)
	}
	var userAddrRule []interface{}
	for _, userAddrItem := range userAddr {
		userAddrRule = append(userAddrRule, userAddrItem)
	}

	logs, sub, err := _BillingManager.contract.WatchLogs(opts, "NetworkWithdrawCompleted", depositAssetKeyRule, userAddrRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BillingManagerNetworkWithdrawCompleted)
				if err := _BillingManager.contract.UnpackLog(event, "NetworkWithdrawCompleted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseNetworkWithdrawCompleted is a log parse operation binding the contract event 0xf72e4018008bb0ada87515fbd23be8639327f3e5c56c767bade1791a8cf98aaa.
//
// Solidity: event NetworkWithdrawCompleted(string indexed depositAssetKey, address indexed userAddr, uint256 amountToWithdraw)
func (_BillingManager *BillingManagerFilterer) ParseNetworkWithdrawCompleted(log types.Log) (*BillingManagerNetworkWithdrawCompleted, error) {
	event := new(BillingManagerNetworkWithdrawCompleted)
	if err := _BillingManager.contract.UnpackLog(event, "NetworkWithdrawCompleted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BillingManagerRewardsWithdrawnIterator is returned from FilterRewardsWithdrawn and is used to iterate over the raw logs and unpacked data for RewardsWithdrawn events raised by the BillingManager contract.
type BillingManagerRewardsWithdrawnIterator struct {
	Event *BillingManagerRewardsWithdrawn // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BillingManagerRewardsWithdrawnIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BillingManagerRewardsWithdrawn)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BillingManagerRewardsWithdrawn)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BillingManagerRewardsWithdrawnIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BillingManagerRewardsWithdrawnIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BillingManagerRewardsWithdrawn represents a RewardsWithdrawn event raised by the BillingManager contract.
type BillingManagerRewardsWithdrawn struct {
	DepositAssetKey common.Hash
	RecipientAddr   common.Address
	RewardsAmount   *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterRewardsWithdrawn is a free log retrieval operation binding the contract event 0x4da529f8b18684c34deb8621c7d4ab35fe1daea1c726cdb6783c93c095d2651a.
//
// Solidity: event RewardsWithdrawn(string indexed depositAssetKey, address indexed recipientAddr, uint256 rewardsAmount)
func (_BillingManager *BillingManagerFilterer) FilterRewardsWithdrawn(opts *bind.FilterOpts, depositAssetKey []string, recipientAddr []common.Address) (*BillingManagerRewardsWithdrawnIterator, error) {

	var depositAssetKeyRule []interface{}
	for _, depositAssetKeyItem := range depositAssetKey {
		depositAssetKeyRule = append(depositAssetKeyRule, depositAssetKeyItem)
	}
	var recipientAddrRule []interface{}
	for _, recipientAddrItem := range recipientAddr {
		recipientAddrRule = append(recipientAddrRule, recipientAddrItem)
	}

	logs, sub, err := _BillingManager.contract.FilterLogs(opts, "RewardsWithdrawn", depositAssetKeyRule, recipientAddrRule)
	if err != nil {
		return nil, err
	}
	return &BillingManagerRewardsWithdrawnIterator{contract: _BillingManager.contract, event: "RewardsWithdrawn", logs: logs, sub: sub}, nil
}

// WatchRewardsWithdrawn is a free log subscription operation binding the contract event 0x4da529f8b18684c34deb8621c7d4ab35fe1daea1c726cdb6783c93c095d2651a.
//
// Solidity: event RewardsWithdrawn(string indexed depositAssetKey, address indexed recipientAddr, uint256 rewardsAmount)
func (_BillingManager *BillingManagerFilterer) WatchRewardsWithdrawn(opts *bind.WatchOpts, sink chan<- *BillingManagerRewardsWithdrawn, depositAssetKey []string, recipientAddr []common.Address) (event.Subscription, error) {

	var depositAssetKeyRule []interface{}
	for _, depositAssetKeyItem := range depositAssetKey {
		depositAssetKeyRule = append(depositAssetKeyRule, depositAssetKeyItem)
	}
	var recipientAddrRule []interface{}
	for _, recipientAddrItem := range recipientAddr {
		recipientAddrRule = append(recipientAddrRule, recipientAddrItem)
	}

	logs, sub, err := _BillingManager.contract.WatchLogs(opts, "RewardsWithdrawn", depositAssetKeyRule, recipientAddrRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BillingManagerRewardsWithdrawn)
				if err := _BillingManager.contract.UnpackLog(event, "RewardsWithdrawn", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRewardsWithdrawn is a log parse operation binding the contract event 0x4da529f8b18684c34deb8621c7d4ab35fe1daea1c726cdb6783c93c095d2651a.
//
// Solidity: event RewardsWithdrawn(string indexed depositAssetKey, address indexed recipientAddr, uint256 rewardsAmount)
func (_BillingManager *BillingManagerFilterer) ParseRewardsWithdrawn(log types.Log) (*BillingManagerRewardsWithdrawn, error) {
	event := new(BillingManagerRewardsWithdrawn)
	if err := _BillingManager.contract.UnpackLog(event, "RewardsWithdrawn", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BillingManagerUserFundsWithdrawnIterator is returned from FilterUserFundsWithdrawn and is used to iterate over the raw logs and unpacked data for UserFundsWithdrawn events raised by the BillingManager contract.
type BillingManagerUserFundsWithdrawnIterator struct {
	Event *BillingManagerUserFundsWithdrawn // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BillingManagerUserFundsWithdrawnIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BillingManagerUserFundsWithdrawn)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BillingManagerUserFundsWithdrawn)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BillingManagerUserFundsWithdrawnIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BillingManagerUserFundsWithdrawnIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BillingManagerUserFundsWithdrawn represents a UserFundsWithdrawn event raised by the BillingManager contract.
type BillingManagerUserFundsWithdrawn struct {
	DepositAssetKey common.Hash
	UserAddr        common.Address
	WithdrawnAmount *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterUserFundsWithdrawn is a free log retrieval operation binding the contract event 0xe0dd7f2d0bf336d345c1e8051edf7f753d4bfdc13d35cf30351267de2aa905c8.
//
// Solidity: event UserFundsWithdrawn(string indexed depositAssetKey, address indexed userAddr, uint256 withdrawnAmount)
func (_BillingManager *BillingManagerFilterer) FilterUserFundsWithdrawn(opts *bind.FilterOpts, depositAssetKey []string, userAddr []common.Address) (*BillingManagerUserFundsWithdrawnIterator, error) {

	var depositAssetKeyRule []interface{}
	for _, depositAssetKeyItem := range depositAssetKey {
		depositAssetKeyRule = append(depositAssetKeyRule, depositAssetKeyItem)
	}
	var userAddrRule []interface{}
	for _, userAddrItem := range userAddr {
		userAddrRule = append(userAddrRule, userAddrItem)
	}

	logs, sub, err := _BillingManager.contract.FilterLogs(opts, "UserFundsWithdrawn", depositAssetKeyRule, userAddrRule)
	if err != nil {
		return nil, err
	}
	return &BillingManagerUserFundsWithdrawnIterator{contract: _BillingManager.contract, event: "UserFundsWithdrawn", logs: logs, sub: sub}, nil
}

// WatchUserFundsWithdrawn is a free log subscription operation binding the contract event 0xe0dd7f2d0bf336d345c1e8051edf7f753d4bfdc13d35cf30351267de2aa905c8.
//
// Solidity: event UserFundsWithdrawn(string indexed depositAssetKey, address indexed userAddr, uint256 withdrawnAmount)
func (_BillingManager *BillingManagerFilterer) WatchUserFundsWithdrawn(opts *bind.WatchOpts, sink chan<- *BillingManagerUserFundsWithdrawn, depositAssetKey []string, userAddr []common.Address) (event.Subscription, error) {

	var depositAssetKeyRule []interface{}
	for _, depositAssetKeyItem := range depositAssetKey {
		depositAssetKeyRule = append(depositAssetKeyRule, depositAssetKeyItem)
	}
	var userAddrRule []interface{}
	for _, userAddrItem := range userAddr {
		userAddrRule = append(userAddrRule, userAddrItem)
	}

	logs, sub, err := _BillingManager.contract.WatchLogs(opts, "UserFundsWithdrawn", depositAssetKeyRule, userAddrRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BillingManagerUserFundsWithdrawn)
				if err := _BillingManager.contract.UnpackLog(event, "UserFundsWithdrawn", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUserFundsWithdrawn is a log parse operation binding the contract event 0xe0dd7f2d0bf336d345c1e8051edf7f753d4bfdc13d35cf30351267de2aa905c8.
//
// Solidity: event UserFundsWithdrawn(string indexed depositAssetKey, address indexed userAddr, uint256 withdrawnAmount)
func (_BillingManager *BillingManagerFilterer) ParseUserFundsWithdrawn(log types.Log) (*BillingManagerUserFundsWithdrawn, error) {
	event := new(BillingManagerUserFundsWithdrawn)
	if err := _BillingManager.contract.UnpackLog(event, "UserFundsWithdrawn", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BillingManagerWorkflowExecutionDiscountUpdatedIterator is returned from FilterWorkflowExecutionDiscountUpdated and is used to iterate over the raw logs and unpacked data for WorkflowExecutionDiscountUpdated events raised by the BillingManager contract.
type BillingManagerWorkflowExecutionDiscountUpdatedIterator struct {
	Event *BillingManagerWorkflowExecutionDiscountUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BillingManagerWorkflowExecutionDiscountUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BillingManagerWorkflowExecutionDiscountUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BillingManagerWorkflowExecutionDiscountUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BillingManagerWorkflowExecutionDiscountUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BillingManagerWorkflowExecutionDiscountUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BillingManagerWorkflowExecutionDiscountUpdated represents a WorkflowExecutionDiscountUpdated event raised by the BillingManager contract.
type BillingManagerWorkflowExecutionDiscountUpdated struct {
	DepositAssetKey               common.Hash
	NewWorkflowExecutionDiscount  *big.Int
	PrevWorkflowExecutionDiscount *big.Int
	Raw                           types.Log // Blockchain specific contextual infos
}

// FilterWorkflowExecutionDiscountUpdated is a free log retrieval operation binding the contract event 0x70c21b53e4a29c6a334ae8d8d80a885023e4749ee873d6594b3f6cbb66140b6b.
//
// Solidity: event WorkflowExecutionDiscountUpdated(string indexed depositAssetKey, uint256 newWorkflowExecutionDiscount, uint256 prevWorkflowExecutionDiscount)
func (_BillingManager *BillingManagerFilterer) FilterWorkflowExecutionDiscountUpdated(opts *bind.FilterOpts, depositAssetKey []string) (*BillingManagerWorkflowExecutionDiscountUpdatedIterator, error) {

	var depositAssetKeyRule []interface{}
	for _, depositAssetKeyItem := range depositAssetKey {
		depositAssetKeyRule = append(depositAssetKeyRule, depositAssetKeyItem)
	}

	logs, sub, err := _BillingManager.contract.FilterLogs(opts, "WorkflowExecutionDiscountUpdated", depositAssetKeyRule)
	if err != nil {
		return nil, err
	}
	return &BillingManagerWorkflowExecutionDiscountUpdatedIterator{contract: _BillingManager.contract, event: "WorkflowExecutionDiscountUpdated", logs: logs, sub: sub}, nil
}

// WatchWorkflowExecutionDiscountUpdated is a free log subscription operation binding the contract event 0x70c21b53e4a29c6a334ae8d8d80a885023e4749ee873d6594b3f6cbb66140b6b.
//
// Solidity: event WorkflowExecutionDiscountUpdated(string indexed depositAssetKey, uint256 newWorkflowExecutionDiscount, uint256 prevWorkflowExecutionDiscount)
func (_BillingManager *BillingManagerFilterer) WatchWorkflowExecutionDiscountUpdated(opts *bind.WatchOpts, sink chan<- *BillingManagerWorkflowExecutionDiscountUpdated, depositAssetKey []string) (event.Subscription, error) {

	var depositAssetKeyRule []interface{}
	for _, depositAssetKeyItem := range depositAssetKey {
		depositAssetKeyRule = append(depositAssetKeyRule, depositAssetKeyItem)
	}

	logs, sub, err := _BillingManager.contract.WatchLogs(opts, "WorkflowExecutionDiscountUpdated", depositAssetKeyRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BillingManagerWorkflowExecutionDiscountUpdated)
				if err := _BillingManager.contract.UnpackLog(event, "WorkflowExecutionDiscountUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseWorkflowExecutionDiscountUpdated is a log parse operation binding the contract event 0x70c21b53e4a29c6a334ae8d8d80a885023e4749ee873d6594b3f6cbb66140b6b.
//
// Solidity: event WorkflowExecutionDiscountUpdated(string indexed depositAssetKey, uint256 newWorkflowExecutionDiscount, uint256 prevWorkflowExecutionDiscount)
func (_BillingManager *BillingManagerFilterer) ParseWorkflowExecutionDiscountUpdated(log types.Log) (*BillingManagerWorkflowExecutionDiscountUpdated, error) {
	event := new(BillingManagerWorkflowExecutionDiscountUpdated)
	if err := _BillingManager.contract.UnpackLog(event, "WorkflowExecutionDiscountUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
